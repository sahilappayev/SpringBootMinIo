buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.avast.gradle:gradle-docker-compose-plugin:0.14.3"
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
    id "com.avast.gradle.docker-compose" version "0.14.3"
}

apply plugin: "com.avast.gradle.docker-compose"


group = 'com.java.sahil.minio'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.6'
    implementation group: 'io.minio', name: 'minio', version: '8.2.1'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
//	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.9'
    implementation('io.springfox:springfox-swagger-ui:2.9.2')
    implementation("io.springfox:springfox-swagger2:2.9.2") {
        exclude module: 'mapstruct'
    }
    implementation "io.springfox:springfox-bean-validators:2.9.2"
    implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.4.2.Final'
    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.4.2.Final'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dockerCompose {
    useComposeFiles = ['src/main/resources/docker-compose.yml']
}

test {
    useJUnitPlatform()
}